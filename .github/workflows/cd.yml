name: Spikhouse CD

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Audit
        run: npm audit --production

  test-unit:
    needs: [ audit ]

    strategy:
      matrix:
        app: [ api, client ]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - run: sudo apt-get install lsb-core

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install packages
        run: npm ci

      - name: Lint
        run: npm run lint ${{matrix.app}}

      - name: Test
        run: npm test ${{matrix.app}}

  test-e2e:
    needs: [ audit ]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install packages
        run: npm ci

      - name: Lint
        run: npm run lint client-e2e

      - name: Start database
        run: docker run -p 27017:27017 --name mongo -d mongo:4

      - name: Wait for DB to be ready
        uses: jakejarvis/wait-action@master
        with:
          time: '60s'

      - name: Test
        run: npm run nx serve api & npm run e2e

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: dist/cypress/apps/client-e2e/screenshots
          retention-days: 1

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: dist/cypress/apps/client-e2e/videos
          retention-days: 1

  build-image:
    needs: [ test-unit, test-e2e ]

    strategy:
      matrix:
        app: [ api, client ]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install packages
        run: npm ci

      - name: Build
        run: npm run nx build-image ${{matrix.app}} -- --tag ${{GITHUB_SHA}}

      - name: Save image
        run: docker save ${{matrix.app}}:${{GITHUB_SHA}} > ${{matrix.app}}-${{GITHUB_SHA}}-image.tar

      - uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.app}}-${{GITHUB_SHA}}-image
          path: ${{matrix.app}}-${{GITHUB_SHA}}-image.tar
          retention-days: 1

  push-image:
    needs: [ build-image ]

    # Only for pushes to the 'main' branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    strategy:
      matrix:
        app: [ api, client ]

    runs-on: ubuntu-latest
    steps:
      - name: Retrieve saved Docker image
        uses: actions/download-artifact@v2
        with:
          name: ${{matrix.app}}-${{GITHUB_SHA}}-image

      - name: Load image into docker
        run: docker load < ${{matrix.app}}-${{GITHUB_SHA}}-image.tar

      - name: Retag image for upload
        run: docker tag ${{matrix.app}}:${{GITHUB_SHA}} docker.saturnserver.org/rangers/${{matrix.app}}:${{GITHUB_SHA}}

      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: docker.saturnserver.org
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Push image
        run: docker push docker.saturnserver.org/rangers/${{matrix.app}}:${{GITHUB_SHA}}

  # TODO: Deployment
